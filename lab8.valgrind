Script started on 2020-11-08 17:18:48-07:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="191" LINES="14"]
]0;dxgriego@Parallels: ~/cse113/lab8[01;32mdxgriego@Parallels[00m:[01;34m~/cse113/lab8[00m$ exit./lab8gcc -g -Wall lab8.c -o lab8 -lm
]0;dxgriego@Parallels: ~/cse113/lab8[01;32mdxgriego@Parallels[00m:[01;34m~/cse113/lab8[00m$ valgrind --leak-check=full ./program[K[K[K[K[K[K[Klab8
==155029== Memcheck, a memory error detector
==155029== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==155029== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==155029== Command: ./lab8
==155029== 

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 6
==155029== 
==155029== HEAP SUMMARY:
==155029==     in use at exit: 0 bytes in 0 blocks
==155029==   total heap usage: 2 allocs, 2 frees, 2,048 bytes allocated
==155029== 
==155029== All heap blocks were freed -- no leaks are possible
==155029== 
==155029== For lists of detected and suppressed errors, rerun with: -s
==155029== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
]0;dxgriego@Parallels: ~/cse113/lab8[01;32mdxgriego@Parallels[00m:[01;34m~/cse113/lab8[00m$ valgrind --leak-check=full ./lab8
==155077== Memcheck, a memory error detector
==155077== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==155077== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==155077== Command: ./lab8
==155077== 

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 1

Enter a number
>> 13.3

1) Insert at head
2) Insert at tail
3) Insert in middle
>> 1

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 1

Enter a number
>> 342

1) Insert at head
2) Insert at tail
3) Insert in middle
>> 2

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 1

Enter a number
>> 35.2

1) Insert at head
2) Insert at tail
3) Insert in middle
>> 3
Enter a position for insert
>> 2

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 1

Enter a number
>> 32

1) Insert at head
2) Insert at tail
3) Insert in middle
>> 3
Enter a position for insert
>> -2

That is not a valid position; Number was not recorded.

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 2
Enter a value to delete from the list
>> 35.2

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 3

Node            Data            Next           
0x4a518c0       13.300000       0x4a51910      
0x4a51910       342.000000      (nil)          

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 6
==155077== 
==155077== HEAP SUMMARY:
==155077==     in use at exit: 0 bytes in 0 blocks
==155077==   total heap usage: 6 allocs, 6 frees, 2,112 bytes allocated
==155077== 
==155077== All heap blocks were freed -- no leaks are possible
==155077== 
==155077== For lists of detected and suppressed errors, rerun with: -s
==155077== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
]0;dxgriego@Parallels: ~/cse113/lab8[01;32mdxgriego@Parallels[00m:[01;34m~/cse113/lab8[00m$ valgrind --leak-check=full ./lab8
==155326== Memcheck, a memory error detector
==155326== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==155326== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==155326== Command: ./lab8
==155326== 

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 1

Enter a number
>> 32  43

1) Insert at head
2) Insert at tail
3) Insert in middle
>> 2 3
Enter a position for insert
>> 321

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 3

Node            Data            Next           
0x4a518c0       43.000000       (nil)          

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 4

There are 1 items in the list.

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 1

Enter a number
>> 32

1) Insert at head
2) Insert at tail
3) Insert in middle
>> 2

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 1

Enter a number
>> 1

1) Insert at head
2) Insert at tail
3) Insert in middle
>> 1

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 1

Enter a number
>> 43  65

1) Insert at head
2) Insert at tail
3) Insert in middle
>> 1

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 3

Node            Data            Next           
0x4a519b0       65.000000       0x4a51960      
0x4a51960       1.000000        0x4a518c0      
0x4a518c0       43.000000       0x4a51910      
0x4a51910       32.000000       (nil)          

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 2
Enter a value to delete from the list
>> 2

The number was not found in the list; nothing was deleted

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 1

Enter a number
>> 3245

1) Insert at head
2) Insert at tail
3) Insert in middle
>> 3
Enter a position for insert
>> -453

That is not a valid position; Number was not recorded.

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 3

Node            Data            Next           
0x4a519b0       65.000000       0x4a51960      
0x4a51960       1.000000        0x4a518c0      
0x4a518c0       43.000000       0x4a51910      
0x4a51910       32.000000       (nil)          

1) Enter a number
2) Delete a number
3) Print all numbers
4) Tell how many items are in the list
5) Find a number in the list
6) Quit
>> 6
==155326== 
==155326== HEAP SUMMARY:
==155326==     in use at exit: 0 bytes in 0 blocks
==155326==   total heap usage: 7 allocs, 7 frees, 2,128 bytes allocated
==155326== 
==155326== All heap blocks were freed -- no leaks are possible
==155326== 
==155326== For lists of detected and suppressed errors, rerun with: -s
==155326== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
]0;dxgriego@Parallels: ~/cse113/lab8[01;32mdxgriego@Parallels[00m:[01;34m~/cse113/lab8[00m$ exit
exit

Script done on 2020-11-08 17:21:50-07:00 [COMMAND_EXIT_CODE="0"]
